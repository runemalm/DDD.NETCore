name: Tests

on:
  push:
    branches:
      - develop

jobs:
  unit-tests:
    name: Unit Tests (.NET ${{ matrix.dotnet-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [8.0.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore Dependencies
        working-directory: src/OpenDDD.Tests
        run: dotnet restore

      - name: Build Project
        working-directory: src/OpenDDD.Tests
        run: dotnet build --no-restore --configuration Release /p:TreatWarningsAsErrors=false

      - name: Run Unit Tests
        working-directory: src/OpenDDD.Tests
        run: dotnet test --no-build --configuration Release --filter "Category=Unit" --logger "trx;LogFileName=TestResults.trx" --results-directory TestResults

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: UnitTestResults
          path: src/OpenDDD.Tests/TestResults/TestResults.trx

      - name: Publish Unit Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Unit Tests Report
          path: src/OpenDDD.Tests/TestResults/TestResults.trx
          reporter: dotnet-trx

      - name: Generate Test Summary
        if: always()
        run: |
          PASSED=$(grep -oP '(?<=Passed=")[0-9]+' src/OpenDDD.Tests/TestResults/TestResults.trx || echo 0)
          FAILED=$(grep -oP '(?<=Failed=")[0-9]+' src/OpenDDD.Tests/TestResults/TestResults.trx || echo 0)
          echo "{ \"schemaVersion\": 1, \"label\": \"Unit Tests\", \"message\": \"✅ $PASSED | ❌ $FAILED\", \"color\": \"blue\" }" > unit-tests-badge.json

      - name: Upload Unit Test Badge
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-tests-badge
          path: unit-tests-badge.json

  integration-tests:
    name: Integration Tests (.NET ${{ matrix.dotnet-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [8.0.x]

    services:
      kafka:
        image: confluentinc/cp-kafka:latest
        env:
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        ports:
          - 9092:9092
        options: --network-alias kafka

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672

      azurite:
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000
          - 10001:10001
          - 10002:10002

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore Dependencies
        working-directory: src/OpenDDD.Tests
        run: dotnet restore

      - name: Build Project
        working-directory: src/OpenDDD.Tests
        run: dotnet build --no-restore --configuration Release

      - name: Run Integration Tests
        working-directory: src/OpenDDD.Tests
        env:
          KAFKA_BROKER: localhost:9092
          RABBITMQ_HOST: localhost
          AZURE_STORAGE_CONNECTION_STRING: "UseDevelopmentStorage=true;"
        run: dotnet test --no-build --configuration Release --filter "Category=Integration" --logger "trx;LogFileName=TestResults.trx" --results-directory TestResults

      - name: Upload Integration Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: IntegrationTestResults
          path: src/OpenDDD.Tests/TestResults/TestResults.trx

      - name: Publish Integration Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Integration Tests Report
          path: src/OpenDDD.Tests/TestResults/TestResults.trx
          reporter: dotnet-trx
