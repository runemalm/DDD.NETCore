name: Tests

on:
  push:
    branches:
      - develop

jobs:
  unit-tests:
    name: Unit Tests (.NET ${{ matrix.dotnet-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [8.0.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore Dependencies
        working-directory: src/OpenDDD.Tests
        run: dotnet restore

      - name: Build Project
        working-directory: src/OpenDDD.Tests
        run: dotnet build --no-restore --configuration Release /p:TreatWarningsAsErrors=false

      - name: Run Unit Tests
        working-directory: src/OpenDDD.Tests
        run: dotnet test --no-build --configuration Release --filter "Category=Unit" --logger "trx;LogFileName=TestResults.trx" --results-directory TestResults

      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: UnitTestResults
          path: src/OpenDDD.Tests/TestResults/TestResults.trx

      - name: Publish Unit Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Unit Tests Report
          path: src/OpenDDD.Tests/TestResults/TestResults.trx
          reporter: dotnet-trx

  integration-tests:
    name: Integration Tests (.NET ${{ matrix.dotnet-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [8.0.x]

    services:
      kafka:
        image: confluentinc/cp-kafka:latest
        env:
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        ports:
          - 9092:9092
        options: --network-alias kafka

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Restore Dependencies
        working-directory: src/OpenDDD.Tests
        run: dotnet restore

      - name: Build Project
        working-directory: src/OpenDDD.Tests
        run: dotnet build --no-restore --configuration Release

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Azure Service Bus namespace for Testing
        run: |
          NAMESPACE_NAME="test-servicebus-${{ github.run_id }}-${{ github.run_attempt }}"
          echo "NAMESPACE_NAME=${NAMESPACE_NAME}" >> $GITHUB_ENV
          az servicebus namespace create \
            --resource-group opendddnet \
            --name $NAMESPACE_NAME \
            --location northeurope
          CONNECTION_STRING=$(az servicebus namespace authorization-rule keys list \
            --resource-group opendddnet \
            --namespace-name $NAMESPACE_NAME \
            --name RootManageSharedAccessKey \
            --query primaryConnectionString \
            -o tsv)
          echo "AZURE_SERVICE_BUS_CONNECTION_STRING=${CONNECTION_STRING}" >> $GITHUB_ENV

      - name: Run Integration Tests
        working-directory: src/OpenDDD.Tests
        env:
          KAFKA_BROKER: localhost:9092
          RABBITMQ_HOST: localhost
          AZURE_SERVICE_BUS_CONNECTION_STRING: ${{ env.AZURE_SERVICE_BUS_CONNECTION_STRING }}
        run: dotnet test --no-build --configuration Release --filter "Category=Integration" --logger "trx;LogFileName=TestResults.trx" --results-directory TestResults

      - name: Delete Azure Service Bus namespace After Tests
        if: always()
        run: |
          if [[ -n "${NAMESPACE_NAME}" ]]; then
            echo "Deleting namespace: $NAMESPACE_NAME"
            az servicebus namespace delete --resource-group opendddnet --name $NAMESPACE_NAME
          else
            echo "No namespace found, skipping deletion."
          fi

      - name: Upload Integration Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: IntegrationTestResults
          path: src/OpenDDD.Tests/TestResults/TestResults.trx

      - name: Publish Integration Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Integration Tests Report
          path: src/OpenDDD.Tests/TestResults/TestResults.trx
          reporter: dotnet-trx
